name: "Terraform"

on:
  push:
    branches: ["main"]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - uses: hashicorp/setup-terraform@v2

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init

      # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terraform Format
        run: terraform fmt -check

      # Generates an execution plan for Terraform
      - name: Terraform Plan
        run: terraform plan -input=false

        # On push to "main", build or change infrastructure according to Terraform configuration files
        # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
      - name: Terraform Apply
        if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false

      - name: Create and populate test.yml file
        run: |
          touch myupdate.yml
        shell: bash

      - uses: stefanzweifel/git-auto-commit-action@v4
        # with:
        #   # Optional. Commit message for the created commit.
        #   # Defaults to "Apply automatic changes"
        #   commit_message: Automated Change using git flow

        #   # Optional. Local and remote branch name where commit is going to be pushed
        #   #  to. Defaults to the current branch.
        #   #  You might need to set `create_branch: true` if the branch does not exist.
        #   create_branch: true
        #   branch: feature-123

        #   # Optional. Options used by `git-commit`.
        #   # See https://git-scm.com/docs/git-commit#_options
        #   commit_options: '--no-verify --signoff'

        #   # Optional glob pattern of files which should be added to the commit
        #   # Defaults to all (.)
        #   # See the `pathspec`-documentation for git
        #   # - https://git-scm.com/docs/git-add#Documentation/git-add.txt-ltpathspecgt82308203
        #   # - https://git-scm.com/docs/gitglossary#Documentation/gitglossary.txt-aiddefpathspecapathspec
        #   file_pattern: 'myupdate.yml'

        #   # Optional. Local file path to the repository.
        #   # Defaults to the root of the repository.
        #   repository: .

        #   # Optional commit user and author settings
        #   commit_user_name: My GitHub Actions Bot # defaults to "github-actions[bot]"
        #   commit_user_email: my-github-actions-bot@example.org # defaults to "41898282+github-actions[bot]@users.noreply.github.com"
        #   commit_author: Author <actions@github.com> # defaults to author of the commit that triggered the run

        #   # Optional. Option used by `git-status` to determine if the repository is 
        #   # dirty. See https://git-scm.com/docs/git-status#_options
        #   status_options: '--untracked-files=no'

        #   # Optional. Options used by `git-add`.
        #   # See https://git-scm.com/docs/git-add#_options
        #   add_options: '-u'

        #   # Optional. Options used by `git-push`.
        #   # See https://git-scm.com/docs/git-push#_options
        #   push_options: '--force'
          
        #   # Optional. Disable dirty check and always try to create a commit and push
        #   skip_dirty_check: true    
          
        #   # Optional. Skip internal call to `git fetch`
        #   skip_fetch: true    
          
        #   # Optional. Skip internal call to `git checkout`
        #   skip_checkout: true

        #   # Optional. Prevents the shell from expanding filenames. 
        #   # Details: https://www.gnu.org/software/bash/manual/html_node/Filename-Expansion.html
        #   disable_globbing: true
          